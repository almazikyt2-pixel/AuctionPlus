package me.kryik.auctionplus.lot;

import me.kryik.auctionplus.AuctionPlus;
import org.bukkit.NamespacedKey;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.inventory.EquipmentSlot;
import org.bukkit.inventory.ItemStack;

public class AhCommand implements CommandExecutor {
    @Override
    public boolean onCommand(CommandSender s, Command cmd, String label, String[] args) {
        if (!(s instanceof Player p)) {
            s.sendMessage("–ö–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –æ—Ç –∏–≥—Ä–æ–∫–∞");
            return true;
        }
        if (args.length == 0) {
            AhMenu.open(p, 1);
            return true;
        }

        if (args[0].equalsIgnoreCase("sell")) {
            if (args.length < 2) { p.sendMessage("¬ßc–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /ah sell <—Ü–µ–Ω–∞>"); return true; }
            int price;
            try { price = Integer.parseInt(args[1]); } catch (Exception e) { p.sendMessage("¬ßc–¶–µ–Ω–∞ ‚Äî —á–∏—Å–ª–æ"); return true; }

            int min = AuctionPlus.get().getConfig().getInt("min-price", 10);
            if (price < min) { p.sendMessage("¬ßc–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: " + min); return true; }

            // üîπ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞
            int limit = getLotLimit(p);
            int currentLots = AuctionPlus.get().lotDAO().getPlayerLots(p.getUniqueId()).size();
            if (currentLots >= limit) {
                p.sendMessage("¬ßc–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ –ª–æ—Ç–æ–≤ (" + limit + ")");
                return true;
            }

            ItemStack inHand = p.getInventory().getItem(EquipmentSlot.HAND);
            if (inHand == null || inHand.getType().isAir()) { p.sendMessage("¬ßc–í–æ–∑—å–º–∏ –ø—Ä–µ–¥–º–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Ä—É–∫—É"); return true; }

            NamespacedKey key = inHand.getType().getKey();
            if (!"minecraft".equalsIgnoreCase(key.getNamespace())) {
                p.sendMessage("¬ßc–ù–µ–ª—å–∑—è –ø—Ä–æ–¥–∞–≤–∞—Ç—å –º–æ–¥–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã.");
                return true;
            }

            ItemStack toSell = inHand.clone();
            inHand.setAmount(0);

            int id = AuctionPlus.get().lotDAO().createLot(p.getUniqueId(), toSell, price,
                    AuctionPlus.get().getConfig().getInt("lot-expire-days", 365));
            p.sendMessage("¬ßa–õ–æ—Ç –≤—ã—Å—Ç–∞–≤–ª–µ–Ω! ID: ¬ße" + id + "¬ßa, —Ü–µ–Ω–∞: ¬ße" + price + " —Ä—É–±.");
            return true;
        }

        if (args[0].equalsIgnoreCase("buy")) {
            if (args.length < 2) { p.sendMessage("¬ßc–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /ah buy <id>"); return true; }
            int id;
            try { id = Integer.parseInt(args[1]); } catch (Exception e) { p.sendMessage("¬ßcID ‚Äî —á–∏—Å–ª–æ"); return true; }

            AuctionActions.buy(p, id);
            return true;
        }

        if (args[0].equalsIgnoreCase("remove")) {
            if (args.length < 2) { p.sendMessage("¬ßc–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /ah remove <id>"); return true; }
            int id;
            try { id = Integer.parseInt(args[1]); } catch (Exception e) { p.sendMessage("¬ßcID ‚Äî —á–∏—Å–ª–æ"); return true; }
            AuctionActions.removeLot(p, id);
            return true;
        }

        if (args[0].equalsIgnoreCase("expired")) {
            var items = AuctionPlus.get().lotDAO().getExpiredLots(p.getUniqueId());
            if (items.isEmpty()) {
                p.sendMessage("¬ße–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –ª–æ—Ç–æ–≤.");
                return true;
            }
            for (ItemStack it : items) {
                var leftover = p.getInventory().addItem(it);
                if (!leftover.isEmpty()) {
                    p.sendMessage("¬ßc–ù–µ—Ç –º–µ—Å—Ç–∞ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –û—Å–≤–æ–±–æ–¥–∏—Ç–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ.");
                    return true;
                }
            }
            AuctionPlus.get().lotDAO().deleteExpiredLots(p.getUniqueId());
            p.sendMessage("¬ßa–í—ã –∑–∞–±—Ä–∞–ª–∏ –≤—Å–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã.");
            return true;
        }

        p.sendMessage("¬ße/ah ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –∞—É–∫—Ü–∏–æ–Ω\n¬ße/ah sell <—Ü–µ–Ω–∞>\n¬ße/ah buy <id>\n¬ße/ah remove <id>\n¬ße/ah expired");
        return true;
    }

    private int getLotLimit(Player p) {
        for (int i = 100; i > 0; i--) {
            if (p.hasPermission("auctionplus.limit." + i)) return i;
        }
        return AuctionPlus.get().getConfig().getInt("default-lot-limit", 5);
    }
}
